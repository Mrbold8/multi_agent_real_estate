from typing import AsyncGenerator
from typing_extensions import override
from google.adk.agents import BaseAgent
from google.adk.events import Event, EventActions
from google.genai.types import Content, Part
from google.adk.agents.invocation_context import InvocationContext

class SimpleWriterAgent(BaseAgent):
    @override
    async def _run_async_impl(
        self, ctx: InvocationContext
    ) -> AsyncGenerator[Event, None]:
        # --- 1. Session state-–∏–π–≥ –∞–≤–∞—Ö ---
        state = ctx.session.state  # type: dict[str, any]

        urls     = state.get("urls", [])
        contents = state.get("contents", [])
        title    = state.get("title")
        price    = state.get("price")
        location = state.get("location")
        space    = state.get("space")
        listings = state.get("crawled_listings", [])  # crawler-–∞–∞—Å –∏—Ä—Å—ç–Ω –º—ç–¥—ç—ç–ª—ç–ª
        faiss_answer = state.get("faiss_answer")       # FAISS —Ö–∞–π–ª—Ç—ã–Ω “Ø—Ä –¥“Ø–Ω

        # --- 2. –•—É—Ä–∞–∞–Ω–≥—É–π —Ç–µ–∫—Å—Ç “Ø“Ø—Å–≥—ç—Ö ---
        lines: list[str] = []

        # 2.1 –•—ç—Ä—ç–≤ –Ω—ç–≥ URL-–Ω –¥—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π –º—ç–¥—ç—ç–ª—ç–ª –±–∞–π–≤–∞–ª
        if title:
            lines.append(f"Property: {title} in {location}, {space} m¬≤, priced at {price}.")

        # 2.2 Tavily —Ö–∞–π–ª—Ç—ã–Ω “Ø—Ä –¥“Ø–Ω –±–∞–π–≤–∞–ª
        elif urls and contents:
            lines.append("üîç Search results from the internet:")
            for u, c in zip(urls, contents):
                lines.append(f"- {u}: {c}")

        # 2.3 Unegui crawler “Ø—Ä –¥“Ø–Ω –±–∞–π–≤–∞–ª
        elif listings:
            lines.append(f"üè† {len(listings)} listings from Unegui.mn:")
            for i, item in enumerate(listings[:5]):  # —ç—Ö–Ω–∏–π 5-–≥ —Ö–∞—Ä—É—É–ª–Ω–∞
                lines.append(
                    f"{i+1}. {item['title']} in {item['location']}, {item['space']} m¬≤, {item['price']}‚ÇÆ"
                )

        # 2.4 FAISS —Ö–∞—Ä–∏—É –±–∞–π–≤–∞–ª
        if faiss_answer:
            lines.append("\nüì¶ FAISS Similar Search Result:")
            lines.append(faiss_answer)

        # 2.5 –•—ç—Ä—ç–≤ —é—É —á –±–∞–π—Ö–≥“Ø–π –±–æ–ª
        if not lines:
            lines.append("No data found from any agent.")

        # --- 3. –≠—Ü—Å–∏–π–Ω event “Ø“Ø—Å–≥—ç—Ö ---
        summary = "\n".join(lines)

        yield Event(
            invocation_id=ctx.invocation_id,
            author=self.name,
            branch=ctx.branch,
            content=Content(parts=[Part(text=summary)]),
            actions=EventActions(state_delta={"final_response": summary})
        )
